var Str="";


Str+="<div class='SExampleHeader'>";
Str+="Парный тег <b>form</b> &mdash; форма.<br>";
Str+="</div>";

Str+="<div class='SExampleDescription'>";
Str+="Тег <b>form</b> используется для создания формы ввода данных &mdash; интерактивного механизма взаимодействия веб-сайта с пользователем.";
Str+="</div>";

Str+="<div class='SExampleHeader'>";
Str+="Атрибут <b>action</b> тега <b>form</b> задаёт URL <b>скрипта-обработчика</b> &mdash; серверного скрипта, который будет обрабатывать введённые пользователем данные и вернёт ответ в виде новой веб-страницы, содержащей результат обработки.<br>";
Str+="После отправки данных формы на сервер всегда возвращается новая веб-страница.<br>По сути отправка формы на сервер аналогична переходу по гиперссылке, только переход осуществляется на страницу, содержимое которой формируется скриптом-обработчиком &laquo;на лету&raquo; на основе данных, введённых в форму.";
Str+="</div>";

Str+="<div class='SExampleHeader'>";
Str+="Атрибут <b>target</b> тега <b>form</b> указывает, в какой вкладке браузера должна открываться эта новая веб-страница (аналогично атрибуту target у ссылок).";
Str+="</div>";

Str+="<div class='SExampleHeader'>";
Str+="Атрибут <b>method</b> тега <b>form</b> задаёт способ передачи введённых данных скрипту-обработчику:";
Str+="<ul>";
Str+="<li><b>get</b> &mdash; данные передаются прямо в URL, т.е. URL состоит из имени скрипта-обработчика и перечня введённых в форму именованных значений;";
Str+="<li><b>post</b> &mdash; данные передаются в теле запроса, а в URL &mdash; только имя скрипта-обработчика.";
Str+="</ul>";
Str+="<div style='font-size: 14px'>";
Str+="<i>Считается правильным использовать метод <b>get</b>, если скрипт-обработчик при обработке данных формы не вносит никуда никаких изменений (например в базы данных, в файлы), а только возвращает прочитанные откуда-либо данные в виде ответной веб-страницы, т.е. можно отправлять эту форму на сервер много раз, получая один и тот же результат. Также, т.к. в URL содержатся все необходимые для работы скрипта-обработчика данные, такой URL можно отправлять не из формы, а оставлять где угодно в виде обычный гиперссылки (метод get &mdash; это тот метод, которым запрашивается новая страница с сервера при любом переходе по обычной гиперссылке). Также, страницу с таким URL можно освежать сколько угодно раз.<br>";
Str+="Считается правильным использовать метод <b>post</b>, если скрипт-обработчик при обработке данных формы вносит куда-либо какие-либо изменения (например в базы данных, в файлы), и потом формирует ответную веб-страницу. Также, т.к. в URL <b>не</b>&nbsp;содержатся необходимые для работы скрипта-обработчика данные (а только имя скрипта-обработчика), такой URL невозможно использовать в виде обычный гиперссылки (скрипт-обработчик не сможет работать, т.к. ожидает в теле запроса нужные ему данные, а тело запроса пустое).";
Str+="<br>Однако, в некоторых случаях метод выбирается по другим критериям. Например, существует ограничение на объём данных, которые можно передать методом <b>get</b>, т.е. ограничения на размер URL. Численно они зависят от браузера и сервера, т.е. фактически непредсказуемы.";
Str+=" Если есть вероятность, что в поля формы будут вводиться хотя бы сотни символов, возможно, следует использовать метод <b>post</b>.</i>";
Str+="</div>";
Str+="</div>";

Str+="<div class='SExampleHeader'>";
Str+="Внутри тега <b>form</b> должны содержаться элементы формы (поля формы) &mdash; теги <b>input, select, textarea</b> и другие.";
Str+="<br>Каждый элемент формы должен содержать атрибут <b>name</b> &mdash; имя элемента, это то имя, под которым скрипт-обработчик получит введённое в это поле значение.";
Str+="</div>";

Str+="<div class='SExampleHeader'>";
Str+="<i>Имя серверного скрипта-обработчика, метод передачи данных (get или post), типы (а&nbsp;часто и имена) элементов формы не выбираются frontend-разработчиком (верстальщиком), а являются частью технического задания на разработку веб-страницы, т.к. их же должен использовать и backend-разработчик (разработчик серверного скрипта-обработчика).</i>";
Str+="</div>";


document.write(Str);
